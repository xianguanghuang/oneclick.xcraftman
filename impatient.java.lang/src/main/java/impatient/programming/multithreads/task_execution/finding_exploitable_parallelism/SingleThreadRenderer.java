/*------------------------------------------------------------------------------
 * COPYRIGHT Ericsson 2014
 *
 * The copyright to the computer program(s) herein is the property of
 * Ericsson Inc. The programs may be used and/or copied only with written
 * permission from Ericsson Inc. or in accordance with the terms and
 * conditions stipulated in the agreement/contract under which the
 * program(s) have been supplied.
 *----------------------------------------------------------------------------*/
package impatient.programming.multithreads.task_execution.finding_exploitable_parallelism;

import java.util.ArrayList;
import java.util.List;

/*
 * 采取串行的方法来处理文字，图片，效率低，无法充分利用CPU
 * */
public class SingleThreadRenderer {

    void renderPage(CharSequence source) {
        renderText(source);
        List<ImageData> imageData = new ArrayList<ImageData>();
        for (ImageInfo imageInfo : scanForImageInfo(source)) {
            imageData.add(imageInfo.downloadImage());
        }

        for (ImageData data : imageData) {
            renderImage(data);
        }
    }

    private void renderImage(ImageData data) {
        // TODO Auto-generated method stub

    }

    private List<ImageInfo> scanForImageInfo(CharSequence source) {
        // TODO Auto-generated method stub
        return null;
    }

    private void renderText(CharSequence source) {
        // TODO Auto-generated method stub

    }

    public static class ImageData {

    }

    public static class ImageInfo {

        public ImageData downloadImage() {
            // TODO Auto-generated method stub
            return null;
        }

    }
}
